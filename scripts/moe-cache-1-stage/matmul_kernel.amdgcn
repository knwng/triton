	.amdgcn_target "amdgcn-amd-amdhsa--gfx950"
	.amdhsa_code_object_version 5
	.text
	.globl	matmul_kernel                   ; -- Begin function matmul_kernel
	.p2align	8
	.type	matmul_kernel,@function
matmul_kernel:                          ; @matmul_kernel
.Lfunc_begin0:
	.cfi_sections .debug_frame
	.cfi_startproc
; %bb.25:
	.file	1 "/root/code/triton/scripts" "moe_kernel.py"
	.loc	1 7 0 prologue_end              ; moe_kernel.py:7:0
	s_load_dwordx2 s[2:3], s[0:1], 0x0
	s_load_dwordx8 s[4:11], s[0:1], 0x8
	s_load_dwordx4 s[12:15], s[0:1], 0x28
	s_waitcnt lgkmcnt(0)
	s_branch .LBB0_0
	.loc	1 0 0 is_stmt 0                 ; :0:0
.Ltmp0:
	.p2align	8
; %bb.26:
.LBB0_0:
.Ltmp1:
	.file	2 "/opt/conda/envs/py_3.10/lib/python3.10/site-packages/triton/language" "standard.py"
	.loc	2 40 22 is_stmt 1               ; standard.py:40:22 @[ moe_kernel.py:22:27 ]
	s_add_i32 s8, s9, 63
	.loc	2 40 28 is_stmt 0               ; standard.py:40:28 @[ moe_kernel.py:22:27 ]
	s_ashr_i32 s13, s8, 31
	s_lshr_b32 s13, s13, 26
	s_add_i32 s8, s8, s13
	s_ashr_i32 s13, s8, 6
.Ltmp2:
	.loc	1 24 23 is_stmt 1               ; moe_kernel.py:24:23
	s_abs_i32 s17, s13
	v_cvt_f32_u32_e32 v1, s17
	s_sub_i32 s18, 0, s17
	.loc	1 19 24                         ; moe_kernel.py:19:24
	s_load_dword s8, s[0:1], 0x38
	.loc	1 24 23                         ; moe_kernel.py:24:23
	s_abs_i32 s1, s16
	v_rcp_iflag_f32_e32 v1, v1
	s_xor_b32 s0, s16, s13
	s_ashr_i32 s0, s0, 31
	.loc	1 39 25                         ; moe_kernel.py:39:25
	v_mov_b32_e32 v5, 0x27000
	.loc	1 24 23                         ; moe_kernel.py:24:23
	v_mul_f32_e32 v1, 0x4f7ffffe, v1
	v_cvt_u32_f32_e32 v1, v1
	v_mul_lo_u32 v2, s18, v1
	v_mul_hi_u32 v2, v1, v2
	v_add_u32_e32 v1, v1, v2
	v_mul_hi_u32 v1, s1, v1
	v_mul_lo_u32 v2, v1, s17
	v_sub_u32_e32 v2, s1, v2
	v_add_u32_e32 v3, 1, v1
	v_subrev_u32_e32 v4, s17, v2
	v_cmp_le_u32_e32 vcc, s17, v2
	s_nop 1
	v_cndmask_b32_e32 v1, v1, v3, vcc
	v_cndmask_b32_e32 v2, v2, v4, vcc
	v_add_u32_e32 v3, 1, v1
	v_cmp_le_u32_e32 vcc, s17, v2
	.loc	1 39 25                         ; moe_kernel.py:39:25
	v_mov_b32_e32 v4, 0x7ffffffe
	.loc	1 24 23                         ; moe_kernel.py:24:23
	s_nop 0
	v_cndmask_b32_e32 v1, v1, v3, vcc
	v_xor_b32_e32 v1, s0, v1
	v_subrev_u32_e32 v6, s0, v1
	.loc	1 38 28                         ; moe_kernel.py:38:28
	v_lshlrev_b32_e32 v2, 4, v6
	.loc	1 39 48                         ; moe_kernel.py:39:48
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	.loc	1 38 56                         ; moe_kernel.py:38:56
	v_lshrrev_b32_e32 v1, 4, v0
	.loc	1 39 48                         ; moe_kernel.py:39:48
	v_lshl_add_u64 v[2:3], s[14:15], 0, v[2:3]
	.loc	1 39 25 is_stmt 0               ; moe_kernel.py:39:25
	v_and_b32_e32 v3, 0xffff, v3
	v_lshlrev_b32_e32 v8, 2, v1
	s_mov_b64 s[14:15], exec
.LBB0_1:                                ; =>This Inner Loop Header: Depth=1
	v_readfirstlane_b32 s20, v2
	v_readfirstlane_b32 s21, v3
	v_readfirstlane_b32 s22, v4
	v_readfirstlane_b32 s23, v5
	v_cmp_eq_u64_e32 vcc, s[20:21], v[2:3]
	s_nop 0
	v_cmp_eq_u64_e64 s[0:1], s[22:23], v[4:5]
	s_and_b64 s[0:1], vcc, s[0:1]
	s_and_saveexec_b64 s[0:1], s[0:1]
	buffer_load_dword v7, v8, s[20:23], 0 offen
                                        ; implicit-def: $vgpr8
	s_xor_b64 exec, exec, s[0:1]
	s_cbranch_execnz .LBB0_1
; %bb.2:
	s_mov_b64 exec, s[14:15]
	v_lshlrev_b32_e32 v8, 2, v0
	v_and_b32_e32 v8, 60, v8
	s_mov_b64 s[14:15], exec
.LBB0_3:                                ; =>This Inner Loop Header: Depth=1
	v_readfirstlane_b32 s20, v2
	v_readfirstlane_b32 s21, v3
	v_readfirstlane_b32 s22, v4
	v_readfirstlane_b32 s23, v5
	v_cmp_eq_u64_e32 vcc, s[20:21], v[2:3]
	s_nop 0
	v_cmp_eq_u64_e64 s[0:1], s[22:23], v[4:5]
	s_and_b64 s[0:1], vcc, s[0:1]
	s_and_saveexec_b64 s[0:1], s[0:1]
	buffer_load_dword v62, v8, s[20:23], 0 offen
                                        ; implicit-def: $vgpr2_vgpr3_vgpr4_vgpr5
                                        ; implicit-def: $vgpr8
	s_xor_b64 exec, exec, s[0:1]
	s_cbranch_execnz .LBB0_3
; %bb.4:
	s_mov_b64 exec, s[14:15]
	.loc	1 25 22 is_stmt 1               ; moe_kernel.py:25:22
	v_mul_lo_u32 v2, v6, s13
	v_sub_u32_e32 v2, s16, v2
	.loc	1 42 23                         ; moe_kernel.py:42:23
	v_lshlrev_b32_e32 v36, 6, v2
	.loc	1 45 51                         ; moe_kernel.py:45:51
	v_mul_lo_u32 v4, v36, s11
	.loc	1 45 28 is_stmt 0               ; moe_kernel.py:45:28
	v_lshlrev_b32_e32 v3, 3, v0
	.loc	1 45 51                         ; moe_kernel.py:45:51
	v_ashrrev_i32_e32 v5, 31, v4
	.loc	1 45 28                         ; moe_kernel.py:45:28
	v_and_b32_e32 v2, 0x78, v3
	.loc	1 45 51                         ; moe_kernel.py:45:51
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_lshl_add_u64 v[4:5], s[4:5], 0, v[4:5]
	v_mad_u64_u32 v[8:9], s[4:5], s11, v1, v[2:3]
	.loc	1 44 55 is_stmt 1               ; moe_kernel.py:44:55
	s_waitcnt vmcnt(1)
	v_mad_u64_u32 v[14:15], s[4:5], v7, s10, v[2:3]
	v_lshlrev_b32_e32 v2, 1, v2
	v_add_u32_e32 v16, 0x80, v14
	v_lshl_or_b32 v2, v1, 11, v2
	.loc	1 42 51                         ; moe_kernel.py:42:51
	v_lshrrev_b32_e32 v37, 2, v0
	s_movk_i32 s13, 0x78
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_u32_e32 v63, 0, v2
	v_and_b32_e32 v2, 15, v0
	v_lshrrev_b32_e32 v0, 1, v0
	v_lshl_add_u64 v[38:39], v[16:17], 1, s[2:3]
	v_and_b32_e32 v16, 24, v0
	v_bitop3_b32 v0, v0, s13, v3 bitop3:0x48
	v_lshlrev_b32_e32 v0, 1, v0
	.loc	1 44 55                         ; moe_kernel.py:44:55
	v_add_u32_e32 v18, 0x100, v14
	v_lshl_or_b32 v0, v1, 8, v0
	s_add_i32 s4, 0, 0x8000
	.loc	1 45 51                         ; moe_kernel.py:45:51
	s_lshl_b32 s14, s11, 4
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_u32_e32 v64, 0, v0
	v_add_u32_e32 v65, s4, v0
	v_and_or_b32 v0, v37, 48, v2
	v_add_u32_e32 v6, s14, v8
	v_lshl_add_u64 v[40:41], v[18:19], 1, s[2:3]
	v_or_b32_e32 v15, 32, v16
	v_or_b32_e32 v17, 64, v16
	v_or_b32_e32 v18, 0x60, v16
	v_lshlrev_b32_e32 v1, 3, v2
	v_lshlrev_b32_e32 v0, 7, v0
	v_add_u32_e32 v10, s14, v6
	v_lshlrev_b32_e32 v19, 8, v2
	v_bitop3_b32 v2, v0, v16, v1 bitop3:0xf6
	v_bitop3_b32 v3, v15, v0, v1 bitop3:0xde
	v_bitop3_b32 v15, v17, v0, v1 bitop3:0xde
	v_bitop3_b32 v0, v18, v0, v1 bitop3:0xde
	v_add_u32_e32 v12, s14, v10
	.loc	1 44 55                         ; moe_kernel.py:44:55
	v_add_u32_e32 v20, 0x180, v14
	v_add_u32_e32 v22, 0x200, v14
	v_add_u32_e32 v24, 0x280, v14
	v_add_u32_e32 v26, 0x300, v14
	v_add_u32_e32 v28, 0x380, v14
	v_lshl_add_u32 v69, v0, 1, 0
	v_lshlrev_b32_e32 v0, 1, v16
	.loc	1 40 30                         ; moe_kernel.py:40:30
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_i32_e64 s[0:1], s8, v7
	v_ashrrev_i32_e32 v21, 31, v20
	v_ashrrev_i32_e32 v23, 31, v22
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshl_add_u32 v68, v15, 1, 0
	v_ashrrev_i32_e32 v15, 31, v14
	v_add3_u32 v70, 0, v19, v0
	v_mov_b32_e32 v0, 0
	v_lshl_add_u64 v[42:43], v[20:21], 1, s[2:3]
	v_lshl_add_u64 v[44:45], v[22:23], 1, s[2:3]
	v_lshl_add_u64 v[46:47], v[24:25], 1, s[2:3]
	v_lshl_add_u64 v[48:49], v[26:27], 1, s[2:3]
	v_lshl_add_u64 v[50:51], v[28:29], 1, s[2:3]
	v_lshl_add_u32 v66, v2, 1, 0
	v_lshl_add_u32 v67, v3, 1, 0
	v_lshl_add_u64 v[52:53], v[14:15], 1, s[2:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	v_lshl_add_u64 v[54:55], v[8:9], 1, v[4:5]
	v_lshl_add_u64 v[56:57], v[6:7], 1, v[4:5]
	v_lshl_add_u64 v[58:59], v[10:11], 1, v[4:5]
	v_lshl_add_u64 v[60:61], v[12:13], 1, v[4:5]
	s_mov_b64 s[2:3], -1
	v_mov_b32_e32 v1, v0
	v_mov_b32_e32 v2, v0
	v_mov_b32_e32 v3, v0
	s_branch .LBB0_6
.LBB0_5:                                ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 20 is_stmt 0                ; moe_kernel.py:0:20
	s_or_b64 exec, exec, s[4:5]
	.loc	1 50 22 is_stmt 1               ; moe_kernel.py:50:22
	s_barrier
	.loc	1 53 20                         ; moe_kernel.py:53:20
	global_load_dwordx4 v[72:75], v[54:55], off
	global_load_dwordx4 v[76:79], v[56:57], off
	global_load_dwordx4 v[80:83], v[58:59], off
	global_load_dwordx4 v[84:87], v[60:61], off
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt vmcnt(4)
	ds_write_b128 v63, v[4:7]
	ds_write_b128 v63, v[12:15] offset:256
	ds_write_b128 v63, v[8:11] offset:512
	ds_write_b128 v63, v[20:23] offset:768
	ds_write_b128 v63, v[16:19] offset:1024
	ds_write_b128 v63, v[28:31] offset:1280
	ds_write_b128 v63, v[24:27] offset:1536
	ds_write_b128 v63, v[32:35] offset:1792
	s_waitcnt lgkmcnt(0)
	s_barrier
	ds_read_b128 v[4:7], v70
	ds_read_b128 v[8:11], v70 offset:64
	ds_read_b128 v[12:15], v70 offset:128
	ds_read_b128 v[16:19], v70 offset:192
	s_xor_b64 s[2:3], s[2:3], -1
	s_andn2_b64 vcc, exec, s[2:3]
	s_mov_b64 s[2:3], 0
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[72:75] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[76:79] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[80:83] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[84:87] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[20:23], v[54:55], off offset:256
	global_load_dwordx4 v[24:27], v[56:57], off offset:256
	global_load_dwordx4 v[28:31], v[58:59], off offset:256
	global_load_dwordx4 v[32:35], v[60:61], off offset:256
	ds_read_b128 v[72:75], v66 offset:32768
	ds_read_b128 v[76:79], v67 offset:32768
	ds_read_b128 v[80:83], v68 offset:32768
	ds_read_b128 v[84:87], v69 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	s_waitcnt lgkmcnt(3)
	v_mfma_f32_16x16x32_f16 v[0:3], v[72:75], v[4:7], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[8:11], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:256
	ds_read_b128 v[8:11], v70 offset:320
	ds_read_b128 v[72:75], v70 offset:384
	ds_read_b128 v[76:79], v70 offset:448
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[20:23] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[24:27] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[28:31] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[32:35] offset:12288
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[80:83], v[12:15], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[12:15], v[54:55], off offset:512
	global_load_dwordx4 v[20:23], v[56:57], off offset:512
	global_load_dwordx4 v[24:27], v[58:59], off offset:512
	global_load_dwordx4 v[28:31], v[60:61], off offset:512
	ds_read_b128 v[32:35], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[84:87], v[16:19], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[16:19], v67 offset:32768
	ds_read_b128 v[80:83], v68 offset:32768
	ds_read_b128 v[84:87], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[32:35], v[4:7], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:512
	ds_read_b128 v[32:35], v70 offset:576
	ds_read_b128 v[88:91], v70 offset:640
	ds_read_b128 v[92:95], v70 offset:704
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[12:15] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[20:23] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[24:27] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[28:31] offset:12288
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[16:19], v[8:11], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[8:11], v[54:55], off offset:768
	global_load_dwordx4 v[12:15], v[56:57], off offset:768
	global_load_dwordx4 v[16:19], v[58:59], off offset:768
	global_load_dwordx4 v[20:23], v[60:61], off offset:768
	ds_read_b128 v[24:27], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[80:83], v[72:75], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[84:87], v[76:79], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[28:31], v67 offset:32768
	ds_read_b128 v[72:75], v68 offset:32768
	ds_read_b128 v[76:79], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[24:27], v[4:7], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[28:31], v[32:35], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:768
	ds_read_b128 v[24:27], v70 offset:832
	ds_read_b128 v[28:31], v70 offset:896
	ds_read_b128 v[32:35], v70 offset:960
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[8:11] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[12:15] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[16:19] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[20:23] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[8:11], v[54:55], off offset:1024
	global_load_dwordx4 v[12:15], v[56:57], off offset:1024
	global_load_dwordx4 v[16:19], v[58:59], off offset:1024
	global_load_dwordx4 v[20:23], v[60:61], off offset:1024
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[72:75], v[88:91], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[72:75], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[92:95], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[76:79], v67 offset:32768
	ds_read_b128 v[80:83], v68 offset:32768
	ds_read_b128 v[84:87], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[72:75], v[4:7], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:1024
	ds_read_b128 v[72:75], v70 offset:1088
	ds_read_b128 v[88:91], v70 offset:1152
	ds_read_b128 v[92:95], v70 offset:1216
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[8:11] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[12:15] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[16:19] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[20:23] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[8:11], v[54:55], off offset:1280
	global_load_dwordx4 v[12:15], v[56:57], off offset:1280
	global_load_dwordx4 v[16:19], v[58:59], off offset:1280
	global_load_dwordx4 v[20:23], v[60:61], off offset:1280
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[24:27], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[24:27], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[80:83], v[28:31], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[84:87], v[32:35], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[28:31], v67 offset:32768
	ds_read_b128 v[32:35], v68 offset:32768
	ds_read_b128 v[76:79], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[24:27], v[4:7], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[28:31], v[72:75], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:1280
	ds_read_b128 v[24:27], v70 offset:1344
	ds_read_b128 v[28:31], v70 offset:1408
	ds_read_b128 v[72:75], v70 offset:1472
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[8:11] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[12:15] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[16:19] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[20:23] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[8:11], v[54:55], off offset:1536
	global_load_dwordx4 v[12:15], v[56:57], off offset:1536
	global_load_dwordx4 v[16:19], v[58:59], off offset:1536
	global_load_dwordx4 v[20:23], v[60:61], off offset:1536
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[32:35], v[88:91], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[32:35], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[92:95], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[76:79], v67 offset:32768
	ds_read_b128 v[80:83], v68 offset:32768
	ds_read_b128 v[84:87], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[32:35], v[4:7], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:1536
	ds_read_b128 v[32:35], v70 offset:1600
	ds_read_b128 v[88:91], v70 offset:1664
	ds_read_b128 v[92:95], v70 offset:1728
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[8:11] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[12:15] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[16:19] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[20:23] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	global_load_dwordx4 v[8:11], v[54:55], off offset:1792
	global_load_dwordx4 v[12:15], v[56:57], off offset:1792
	global_load_dwordx4 v[16:19], v[58:59], off offset:1792
	global_load_dwordx4 v[20:23], v[60:61], off offset:1792
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[24:27], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[24:27], v66 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[80:83], v[28:31], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[84:87], v[72:75], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[28:31], v67 offset:32768
	ds_read_b128 v[72:75], v68 offset:32768
	ds_read_b128 v[76:79], v69 offset:32768
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[24:27], v[4:7], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[28:31], v[32:35], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	ds_read_b128 v[4:7], v70 offset:1792
	ds_read_b128 v[24:27], v70 offset:1856
	ds_read_b128 v[28:31], v70 offset:1920
	ds_read_b128 v[32:35], v70 offset:1984
	.loc	1 53 20                         ; moe_kernel.py:53:20
	s_waitcnt vmcnt(3)
	ds_write_b128 v64, v[8:11] offset:32768
	s_waitcnt vmcnt(2)
	ds_write_b128 v65, v[12:15] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v65, v[16:19] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v65, v[20:23] offset:12288
	s_waitcnt lgkmcnt(0)
	s_barrier
	ds_read_b128 v[8:11], v66 offset:32768
	ds_read_b128 v[12:15], v67 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	v_mfma_f32_16x16x32_f16 v[0:3], v[72:75], v[88:91], v[0:3]
	v_mfma_f32_16x16x32_f16 v[0:3], v[76:79], v[92:95], v[0:3]
	s_waitcnt lgkmcnt(1)
	v_mfma_f32_16x16x32_f16 v[0:3], v[8:11], v[4:7], v[0:3]
	.loc	1 53 20                         ; moe_kernel.py:53:20
	ds_read_b128 v[4:7], v68 offset:32768
	ds_read_b128 v[8:11], v69 offset:32768
	.loc	1 54 33                         ; moe_kernel.py:54:33
	s_waitcnt lgkmcnt(2)
	v_mfma_f32_16x16x32_f16 v[0:3], v[12:15], v[24:27], v[0:3]
	s_waitcnt lgkmcnt(1)
	v_mfma_f32_16x16x32_f16 v[0:3], v[4:7], v[28:31], v[0:3]
	s_waitcnt lgkmcnt(0)
	v_mfma_f32_16x16x32_f16 v[0:3], v[8:11], v[32:35], v[0:3]
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_cbranch_vccz .LBB0_22
.LBB0_6:                                ; =>This Inner Loop Header: Depth=1
	.loc	1 0 22 is_stmt 0                ; moe_kernel.py:0:22
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	.loc	1 50 22 is_stmt 1               ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_8
; %bb.7:                                ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[4:7], v[52:53], off
.LBB0_8:                                ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22 is_stmt 0                ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_10
; %bb.9:                                ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[12:15], v[38:39], off
.LBB0_10:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_12
; %bb.11:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[8:11], v[40:41], off
.LBB0_12:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_14
; %bb.13:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[20:23], v[42:43], off
.LBB0_14:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_16
; %bb.15:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[16:19], v[44:45], off
.LBB0_16:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v31, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_18
; %bb.17:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[28:31], v[46:47], off
.LBB0_18:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v27, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_20
; %bb.19:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[24:27], v[48:49], off
.LBB0_20:                               ;   in Loop: Header=BB0_6 Depth=1
	.loc	1 0 22                          ; moe_kernel.py:0:22
	s_or_b64 exec, exec, s[4:5]
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v35, 0
	.loc	1 50 22                         ; moe_kernel.py:50:22
	s_and_saveexec_b64 s[4:5], s[0:1]
	s_cbranch_execz .LBB0_5
; %bb.21:                               ;   in Loop: Header=BB0_6 Depth=1
	global_load_dwordx4 v[32:35], v[50:51], off
	s_branch .LBB0_5
.LBB0_22:
	.loc	1 42 51 is_stmt 1               ; moe_kernel.py:42:51
	v_and_b32_e32 v4, 60, v37
	.loc	1 42 38 is_stmt 0               ; moe_kernel.py:42:38
	v_or_b32_e32 v5, v36, v4
	.loc	1 40 30 is_stmt 1               ; moe_kernel.py:40:30
	v_cmp_gt_i32_e32 vcc, s8, v62
	.loc	1 62 55                         ; moe_kernel.py:62:55
	v_cmp_gt_i32_e64 s[0:1], s9, v5
	.loc	1 62 36 is_stmt 0               ; moe_kernel.py:62:36
	s_and_b64 s[0:1], vcc, s[0:1]
	.loc	1 64 25 is_stmt 1               ; moe_kernel.py:64:25
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execz .LBB0_24
; %bb.23:
	.loc	1 61 55                         ; moe_kernel.py:61:55
	v_ashrrev_i32_e32 v37, 31, v36
	.loc	1 58 23                         ; moe_kernel.py:58:23
	v_cvt_pk_f16_f32 v0, v0, v1
	v_cvt_pk_f16_f32 v1, v2, v3
	.loc	1 61 55                         ; moe_kernel.py:61:55
	v_lshlrev_b64 v[2:3], 1, v[36:37]
	v_mad_u64_u32 v[4:5], s[0:1], v62, s12, v[4:5]
	v_lshl_add_u64 v[2:3], s[6:7], 0, v[2:3]
	.loc	1 64 25                         ; moe_kernel.py:64:25
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshl_add_u64 v[2:3], v[4:5], 1, v[2:3]
	global_store_dwordx2 v[2:3], v[0:1], off
.LBB0_24:
	.loc	1 63 4                          ; moe_kernel.py:63:4
	s_endpgm
.Ltmp3:
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel matmul_kernel
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 72
		.amdhsa_user_sgpr_count 16
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_kernarg_preload_length 14
		.amdhsa_user_sgpr_kernarg_preload_offset 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_uses_dynamic_stack 0
		.amdhsa_enable_private_segment 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 96
		.amdhsa_next_free_sgpr 24
		.amdhsa_accum_offset 96
		.amdhsa_reserve_vcc 1
		.amdhsa_reserve_xnack_mask 1
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_tg_split 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	matmul_kernel, .Lfunc_end0-matmul_kernel
	.cfi_endproc
                                        ; -- End function
	.set matmul_kernel.num_vgpr, 96
	.set matmul_kernel.num_agpr, 0
	.set matmul_kernel.numbered_sgpr, 24
	.set matmul_kernel.private_seg_size, 0
	.set matmul_kernel.uses_vcc, 1
	.set matmul_kernel.uses_flat_scratch, 0
	.set matmul_kernel.has_dyn_sized_stack, 0
	.set matmul_kernel.has_recursion, 0
	.set matmul_kernel.has_indirect_call, 0
	.section	.AMDGPU.csdata,"",@progbits
; Kernel info:
; codeLenInByte = 3152
; TotalNumSgprs: 30
; NumVgprs: 96
; NumAgprs: 0
; TotalNumVgprs: 96
; ScratchSize: 0
; MemoryBound: 1
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 3
; VGPRBlocks: 11
; NumSGPRsForWavesPerEU: 30
; NumVGPRsForWavesPerEU: 96
; AccumOffset: 96
; Occupancy: 5
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 16
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
; COMPUTE_PGM_RSRC3_GFX90A:ACCUM_OFFSET: 23
; COMPUTE_PGM_RSRC3_GFX90A:TG_SPLIT: 0
	.text
	.p2alignl 6, 3212836864
	.fill 256, 4, 3212836864
	.section	.AMDGPU.gpr_maximums,"",@progbits
	.set amdgpu.max_num_vgpr, 0
	.set amdgpu.max_num_agpr, 0
	.set amdgpu.max_num_sgpr, 0
	.text
	.section	.debug_abbrev,"",@progbits
	.byte	1                               ; Abbreviation Code
	.byte	17                              ; DW_TAG_compile_unit
	.byte	1                               ; DW_CHILDREN_yes
	.byte	37                              ; DW_AT_producer
	.byte	14                              ; DW_FORM_strp
	.byte	19                              ; DW_AT_language
	.byte	5                               ; DW_FORM_data2
	.byte	3                               ; DW_AT_name
	.byte	14                              ; DW_FORM_strp
	.byte	16                              ; DW_AT_stmt_list
	.byte	23                              ; DW_FORM_sec_offset
	.byte	27                              ; DW_AT_comp_dir
	.byte	14                              ; DW_FORM_strp
	.byte	17                              ; DW_AT_low_pc
	.byte	1                               ; DW_FORM_addr
	.byte	18                              ; DW_AT_high_pc
	.byte	6                               ; DW_FORM_data4
	.byte	0                               ; EOM(1)
	.byte	0                               ; EOM(2)
	.byte	2                               ; Abbreviation Code
	.byte	46                              ; DW_TAG_subprogram
	.byte	0                               ; DW_CHILDREN_no
	.byte	3                               ; DW_AT_name
	.byte	14                              ; DW_FORM_strp
	.byte	32                              ; DW_AT_inline
	.byte	11                              ; DW_FORM_data1
	.byte	0                               ; EOM(1)
	.byte	0                               ; EOM(2)
	.byte	3                               ; Abbreviation Code
	.byte	46                              ; DW_TAG_subprogram
	.byte	1                               ; DW_CHILDREN_yes
	.byte	17                              ; DW_AT_low_pc
	.byte	1                               ; DW_FORM_addr
	.byte	18                              ; DW_AT_high_pc
	.byte	6                               ; DW_FORM_data4
	.byte	49                              ; DW_AT_abstract_origin
	.byte	19                              ; DW_FORM_ref4
	.byte	0                               ; EOM(1)
	.byte	0                               ; EOM(2)
	.byte	4                               ; Abbreviation Code
	.byte	29                              ; DW_TAG_inlined_subroutine
	.byte	0                               ; DW_CHILDREN_no
	.byte	49                              ; DW_AT_abstract_origin
	.byte	19                              ; DW_FORM_ref4
	.byte	17                              ; DW_AT_low_pc
	.byte	1                               ; DW_FORM_addr
	.byte	18                              ; DW_AT_high_pc
	.byte	6                               ; DW_FORM_data4
	.byte	88                              ; DW_AT_call_file
	.byte	11                              ; DW_FORM_data1
	.byte	89                              ; DW_AT_call_line
	.byte	11                              ; DW_FORM_data1
	.byte	87                              ; DW_AT_call_column
	.byte	11                              ; DW_FORM_data1
	.byte	0                               ; EOM(1)
	.byte	0                               ; EOM(2)
	.byte	0                               ; EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 ; Length of Unit
.Ldebug_info_start0:
	.short	4                               ; DWARF version number
	.long	.debug_abbrev                   ; Offset Into Abbrev. Section
	.byte	8                               ; Address Size (in bytes)
	.byte	1                               ; Abbrev [1] 0xb:0x4c DW_TAG_compile_unit
	.long	.Linfo_string0                  ; DW_AT_producer
	.short	2                               ; DW_AT_language
	.long	.Linfo_string1                  ; DW_AT_name
	.long	.Lline_table_start0             ; DW_AT_stmt_list
	.long	.Linfo_string2                  ; DW_AT_comp_dir
	.quad	.Lfunc_begin0                   ; DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       ; DW_AT_high_pc
	.byte	2                               ; Abbrev [2] 0x2a:0x6 DW_TAG_subprogram
	.long	.Linfo_string3                  ; DW_AT_name
	.byte	1                               ; DW_AT_inline
	.byte	3                               ; Abbrev [3] 0x30:0x26 DW_TAG_subprogram
	.quad	.Lfunc_begin0                   ; DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       ; DW_AT_high_pc
	.long	42                              ; DW_AT_abstract_origin
	.byte	4                               ; Abbrev [4] 0x41:0x14 DW_TAG_inlined_subroutine
	.long	42                              ; DW_AT_abstract_origin
	.quad	.Ltmp1                          ; DW_AT_low_pc
	.long	.Ltmp2-.Ltmp1                   ; DW_AT_high_pc
	.byte	1                               ; DW_AT_call_file
	.byte	22                              ; DW_AT_call_line
	.byte	27                              ; DW_AT_call_column
	.byte	0                               ; End Of Children Mark
	.byte	0                               ; End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"triton"                        ; string offset=0
.Linfo_string1:
	.asciz	"moe_kernel.py"                 ; string offset=7
.Linfo_string2:
	.asciz	"/root/code/triton/scripts"     ; string offset=21
.Linfo_string3:
	.asciz	"matmul_kernel"                 ; string offset=47
	.section	".note.GNU-stack","",@progbits
	.amdgpu_metadata
---
amdhsa.kernels:
  - .agpr_count:     0
    .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .offset:         24
        .size:           4
        .value_kind:     by_value
      - .offset:         28
        .size:           4
        .value_kind:     by_value
      - .offset:         32
        .size:           4
        .value_kind:     by_value
      - .offset:         36
        .size:           4
        .value_kind:     by_value
      - .offset:         40
        .size:           4
        .value_kind:     by_value
      - .address_space:  global
        .offset:         48
        .size:           8
        .value_kind:     global_buffer
      - .offset:         56
        .size:           4
        .value_kind:     by_value
      - .address_space:  global
        .offset:         64
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 72
    .max_flat_workgroup_size: 256
    .name:           matmul_kernel
    .private_segment_fixed_size: 0
    .sgpr_count:     30
    .sgpr_spill_count: 0
    .symbol:         matmul_kernel.kd
    .uses_dynamic_stack: false
    .vgpr_count:     96
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   amdgcn-amd-amdhsa--gfx950
amdhsa.version:
  - 1
  - 2
...

	.end_amdgpu_metadata
	.section	.debug_line,"",@progbits
.Lline_table_start0:
